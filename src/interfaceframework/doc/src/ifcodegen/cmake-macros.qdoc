/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page cmake-qt-set-ifcodegen-variable.html
\ingroup cmake-macros-qtinterfaceframework

\title qt_set_ifcodegen_variable
\target qt6_set_ifcodegen_variable

\brief Sets the variable to the given \c value within an ifcodegen template.

\section1 Synopsis

\badcode
qt_set_ifcodegen_variable(name value)

\endcode

\versionlessCMakeCommandsNote qt6_set_ifcodegen_variable()

\section1 Description

Sets the variable to the given \c value.
This function is used within ifcodegen templates to provide variables which
are exported to the current scope when using
\l {qt6_ifcodegen_extend_target} or \l {qt6_ifcodegen_import_variables}.
*/

/*!
\page cmake-qt-ifcodegen-generate.html
\ingroup cmake-macros-qtinterfaceframework

\title qt_ifcodegen_generate
\target qt6_ifcodegen_generate

\brief Generates files from a qface IDL file

\section1 Synopsis

\badcode
qt_ifcodegen_generate(
    IDL_FILES idl_files
    TEMPLATE template
    [ANNOTATION_FILES ...]
    [IMPORT_PATH ...]
    [OUTPUT_DIR output_dir]
    [EXTRA_HEADERS_OUTPUT_DIR extra_headers_output_dir]
    [EXTRA_TEMPLATE_SEARCH_PATH ...]
    [VERBOSE]
)

\endcode

\versionlessCMakeCommandsNote qt6_ifcodegen_generate()

\section1 Description

Generates files from a qface Interface Definition Language (IDL) file by
invoking \l ifcodegen. It would normally be called internally by
\l {qt_ifcodegen_extend_target} or \l {qt_ifcodegen_import_variables}.
You should not call this function directly unless you have special circumstances
that require you to generate files by invoking ifcodegen, but not use them within
CMake in any way.

//! [generic-arguments]
The input IDL file is specified using \c IDL_FILES, while \c TEMPLATE specifies
the ifcodegen template used for the generation. The given template either needs to be a path to a
template folder or a name of a template found in the template search path. Using the
\c EXTRA_TEMPLATE_SEARCH_PATH argument, it is possible to extend the search path. This is especially
useful if you want to use your own templates for the code generation.
As an alternative to the function argument the \l {QT_IFCODEGEN_TEMPLATE_SEARCH_PATH} global CMake
variable can be used to specify an extra search path for all ifcodegen function calls.

Additional annotation files are passed by the \c ANNOTATION_FILES argument.

\c IMPORT_PATH can be used to add to the search paths where IDL files that this one depends on
can be found. The other IDL files still need to be generated and built on their own.

\c OUTPUT_DIR specifies the directory where the generated files will be written to and defaults to
\c CMAKE_CURRENT_BINARY_DIR.

\c EXTRA_HEADER_OUTPUT_DIR is used to provide an extra directory where all generated headers are copied
to.

By default all log messages generated by \a {ifcodegen} are discarded. To show them you can use the
\c VERBOSE argument, set the \l {IFCODEGEN_VERBOSE} variable or use set \c {CMAKE_MESSAGE_LOG_LEVEL}
to \c VERBOSE.

For more details on the generator's command line arguments, see \l {Use the Generator}.

//! [generic-arguments]
*/

/*!
\page cmake-qt-ifcodegen-extend-target.html
\ingroup cmake-macros-qtinterfaceframework

\title qt_ifcodegen_extend_target
\target qt6_ifcodegen_extend_target

\brief Extends a target with files generated from a qface IDL file

\section1 Synopsis

\badcode
qt_ifcodegen_extend_target(
    target
    IDL_FILES idl_files
    TEMPLATE template
    [ANNOTATION_FILES ...]
    [IMPORT_PATH ...]
    [OUTPUT_DIR output_dir]
    [EXTRA_HEADERS_OUTPUT_DIR extra_headers_output_dir]
    [EXTRA_TEMPLATE_SEARCH_PATH ...]
    [VERBOSE]
    [NO_GENERATE]
)

\endcode

\versionlessCMakeCommandsNote qt6_ifcodegen_extend_target()

\section1 Description

Extends a \c target with files generated from a qface IDL file by invoking \l ifcodegen.
How the \c target is extended is defined by the template and the generated CMake file.

\include cmake-macros.qdoc generic-arguments

Using \c NO_GENERATE it is possible to skip calling \a {ifcodegen}. This is usually only needed
if you are sure the files are already generated e.g. by using \l {qt_ifcodegen_generate} before.

For more details on the generator's command line arguments, see \l {Use the Generator}.

\section1 Examples

\snippet cmake-macros/CMakeLists.txt ifcodegen_extend_target
*/

/*!
\page cmake-qt-ifcodegen-import-variables.html
\ingroup cmake-macros-qtinterfaceframework

\title qt_ifcodegen_import_variables
\target qt6_ifcodegen_import_variables

\brief Generates files from a qface IDL file and provides variables for use within CMake

\section1 Synopsis

\badcode
qt_ifcodegen_import_variables(
    prefix
    IDL_FILES idl_files
    TEMPLATE template
    [ANNOTATION_FILES ...]
    [IMPORT_PATH ...]
    [OUTPUT_DIR output_dir]
    [EXTRA_HEADERS_OUTPUT_DIR extra_headers_output_dir]
    [EXTRA_TEMPLATE_SEARCH_PATH ...]
    [VERBOSE]
    [NO_GENERATE]
)

\endcode

\versionlessCMakeCommandsNote qt6_ifcodegen_import_variables()

\section1 Description

Generates files from a qface IDL file by invoking \l ifcodegen.
All generated files are provided by exposing variables to the current scope. All exposed variables
start with the \c prefix followed by a underscore and are defined by the referenced template.

\include cmake-macros.qdoc generic-arguments

Using \c NO_GENERATE it is possible to skip calling \b {ifcodegen}. This is usually only needed
if you are sure the files are already generated e.g. by using \l {qt_ifcodegen_generate} before.

For more details on the generator's command line arguments, see \l {Use the Generator}.

\section1 Examples

\snippet cmake-macros/CMakeLists.txt ifcodegen_import_variables
*/

