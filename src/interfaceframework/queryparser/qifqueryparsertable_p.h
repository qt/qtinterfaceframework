// Copyright (C) 2023 The Qt Company Ltd. and other contributors.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only WITH Qt-GPL-exception-1.0

//
//  W A R N I N G
//  -------------
//
// This file is not part of the Qt API.  It exists for the convenience
// of other Qt classes.  This header file may change from version to
// version without notice, or even be removed.
//
// We mean it.
//

// This file was generated by qlalr - DO NOT EDIT!
#ifndef QIFQUERYPARSERTABLE_P_H
#define QIFQUERYPARSERTABLE_P_H

#include <QtCore/qglobal.h>

QT_BEGIN_NAMESPACE

class QIfQueryParserTable
{
public:
    enum VariousConstants {
        EOF_SYMBOL = 0,
        AND_OP = 2,
        AND_OP2 = 1,
        ASCENDING = 16,
        BANG = 5,
        DESCENDING = 17,
        EQ_OP = 6,
        EQ_OP2 = 7,
        ERROR = 25,
        FLOATCONSTANT = 21,
        GE_OP = 9,
        GT_OP = 10,
        IC_EQ_OP = 8,
        IDENTIFIER = 22,
        INTCONSTANT = 20,
        LEFT_BRACKET = 18,
        LEFT_PAREN = 14,
        LE_OP = 11,
        LT_OP = 12,
        NE_OP = 13,
        OR_OP = 4,
        OR_OP2 = 3,
        RIGHT_BRACKET = 19,
        RIGHT_PAREN = 15,
        SPACE = 24,
        STRING = 23,

        ACCEPT_STATE = 56,
        RULE_COUNT = 36,
        STATE_COUNT = 57,
        TERMINAL_COUNT = 26,
        NON_TERMINAL_COUNT = 14,

        GOTO_INDEX_OFFSET = 57,
        GOTO_INFO_OFFSET = 114,
        GOTO_CHECK_OFFSET = 114
    };

    static const char *const     spell[];
    static const short             lhs[];
    static const short             rhs[];
    static const short    goto_default[];
    static const short  action_default[];
    static const short    action_index[];
    static const short     action_info[];
    static const short    action_check[];

    static inline int nt_action (int state, int nt)
    {
        const int yyn = action_index [GOTO_INDEX_OFFSET + state] + nt;
        if (yyn < 0 || action_check [GOTO_CHECK_OFFSET + yyn] != nt)
            return goto_default [nt];

        return action_info [GOTO_INFO_OFFSET + yyn];
    }

    static inline int t_action (int state, int token)
    {
        const int yyn = action_index [state] + token;

        if (yyn < 0 || action_check [yyn] != token)
            return - action_default [state];

        return action_info [yyn];
    }
};


QT_END_NAMESPACE
#endif // QIFQUERYPARSERTABLE_P_H

