/****************************************************************************
**
** Copyright (C) 2018 Pelagicore AG
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the QtIvi module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL-QTAS$
** Commercial License Usage
** Licensees holding valid commercial Qt Automotive Suite licenses may use
** this file in accordance with the commercial license agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and The Qt Company.  For
** licensing terms and conditions see https://www.qt.io/terms-conditions.
** For further information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \page qtivi-index.html
    \title Qt IVI
    \keyword QtIvi

    The Qt IVI (In-Vehicle Infotainment) module provides tooling and core classes for implementing
    interfaces to middleware services. \l {The Qt IVI Autogenerator} provides a flexible way to
    define new APIs in an IDL (interface definition language) and generate classes usable from
    C++ as well as from QML.

    The module is built around a pattern based on the separation of API facing the application
    developer, the so called \e {Feature}, and the code implementing it, the \e {Backend}. There
    can be multiple backends per feature and the Core module provides support for finding the
    corresponding backend in an easy-to-use way.

    Common use cases driving this separation are:

    \list
    \li \e {Early development}, where the UI can rely on a feature with a very basic backend
        implementation.
    \li \e {Testing / Simulation}, where the backends can be tested separately from the app and the
        app can be tested using a specialized testing backend.
    \li \e {Targets with different hardware configurations}, where certain parts of the system are
        represented by simulated backends while others use a real hardware integration.
    \li \e {Dynamically appearing services}, when services are available sometimes, but not always,
        meaning that backends come and go over time.
    \endlist

    \section1 Important Topics

    \list
    \li \l{Configuration}
    \li \l{Concepts}
    \li \l{Extending Qt IVI}
    \endlist

    \section1 Getting Started

    \list
      \li \l {Getting Started Using the Qt IVI Generator}
    \endlist

    \section1 Reference API

    In addition to the tooling an core APIs, the module also provides an extendable set of
    reference APIs for automotive features. It can be used to develop automotive applications and
    to provide automotive features to Qt-based applications in a structured manner.
    This reference API already contains so called "simulation backends" which provide partially
    simulated behavior of a real middleware service.

    \list
    \li \l{Using the Qt IVI Reference API}
    \li \l{QtIvi Backends}{Available Backends}
    \endlist

    \section1 Getting Started with the Qt IVI Reference API

    \list
      \li \l {Qt IVI Vehicle Functions C++ Classes#Getting Started}
             {Getting started with Qt IVI Vehicle Functions (C++)}
      \li \l {Qt IVI Vehicle Functions QML Types#Getting Started}
             {Getting started with Qt IVI Vehicle Functions (QML)}
    \endlist

    \section1 Reference

    \list
      \li \l {Qt IVI C++ Classes}
      \li \l {Qt IVI QML Types}
      \li \l {Qt IVI Examples}
    \endlist

    \section1 Licenses and Attributions

    Qt IVI is available under commercial Qt Automotive Suite licenses.
    In addition, it is available under the \l{GNU Lesser General Public License, version 3}, or
    See \l{Qt Licensing} for further details.

    Executables on Windows potentially link against \l{The qtmain Library}. This library is available
    under commercial licenses, and in addition under the \l{BSD 3-clause "New" or "Revised" License}.

    Furthermore Qt IVI potentially contains third party modules under following
    permissive licenses:

    \generatelist{groupsbymodule attributions-qtivi}

*/
