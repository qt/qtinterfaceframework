import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtIvi.Media 1.0'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "QIviAbstractFeature"
        prototype: "QObject"
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "PermissionDenied": 1,
                "InvalidOperation": 2,
                "Timeout": 3,
                "InvalidZone": 4,
                "Unknown": 5
            }
        }
        Enum {
            name: "DiscoveryMode"
            values: {
                "NoAutoDiscovery": 0,
                "AutoDiscovery": 1,
                "LoadOnlyProductionBackends": 2,
                "LoadOnlySimulationBackends": 3
            }
        }
        Enum {
            name: "DiscoveryResult"
            values: {
                "NoResult": 0,
                "ErrorWhileLoading": 1,
                "ProductionBackendLoaded": 2,
                "SimulationBackendLoaded": 3
            }
        }
        Property { name: "discoveryMode"; type: "QIviAbstractFeature::DiscoveryMode" }
        Property {
            name: "discoveryResult"
            type: "QIviAbstractFeature::DiscoveryResult"
            isReadonly: true
        }
        Property { name: "serviceObject"; type: "QIviServiceObject"; isPointer: true }
        Property { name: "isValid"; type: "bool"; isReadonly: true }
        Property { name: "isInitialized"; type: "bool"; isReadonly: true }
        Property { name: "error"; type: "string"; isReadonly: true }
        Signal {
            name: "discoveryModeChanged"
            Parameter { name: "discoveryMode"; type: "QIviAbstractFeature::DiscoveryMode" }
        }
        Signal {
            name: "discoveryResultChanged"
            Parameter { name: "discoveryResult"; type: "QIviAbstractFeature::DiscoveryResult" }
        }
        Signal {
            name: "isValidChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "isInitializedChanged"
            Parameter { name: "isInitialized"; type: "bool" }
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "error"; type: "QIviAbstractFeature::Error" }
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "setServiceObject"
            type: "bool"
            Parameter { name: "so"; type: "QIviServiceObject"; isPointer: true }
        }
        Method {
            name: "setDiscoveryMode"
            Parameter { name: "discoveryMode"; type: "QIviAbstractFeature::DiscoveryMode" }
        }
        Method { name: "startAutoDiscovery"; type: "QIviAbstractFeature::DiscoveryResult" }
    }
    Component {
        name: "QIviAbstractFeatureListModel"
        prototype: "QAbstractListModel"
        Property { name: "discoveryMode"; type: "QIviAbstractFeature::DiscoveryMode" }
        Property {
            name: "discoveryResult"
            type: "QIviAbstractFeature::DiscoveryResult"
            isReadonly: true
        }
        Property { name: "serviceObject"; type: "QIviServiceObject"; isPointer: true }
        Property { name: "isValid"; type: "bool"; isReadonly: true }
        Property { name: "isInitialized"; type: "bool"; isReadonly: true }
        Property { name: "error"; type: "string"; isReadonly: true }
        Signal {
            name: "discoveryModeChanged"
            Parameter { name: "discoveryMode"; type: "QIviAbstractFeature::DiscoveryMode" }
        }
        Signal {
            name: "discoveryResultChanged"
            Parameter { name: "discoveryResult"; type: "QIviAbstractFeature::DiscoveryResult" }
        }
        Signal {
            name: "isValidChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "isInitializedChanged"
            Parameter { name: "isInitialized"; type: "bool" }
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "error"; type: "QIviAbstractFeature::Error" }
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "setServiceObject"
            type: "bool"
            Parameter { name: "so"; type: "QIviServiceObject"; isPointer: true }
        }
        Method {
            name: "setDiscoveryMode"
            Parameter { name: "discoveryMode"; type: "QIviAbstractFeature::DiscoveryMode" }
        }
        Method { name: "startAutoDiscovery"; type: "QIviAbstractFeature::DiscoveryResult" }
    }
    Component {
        name: "QIviAmFmTuner"
        prototype: "QIviAbstractFeature"
        exports: ["QtIvi.Media/AmFmTuner 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Band"
            values: {
                "AMBand": 0,
                "FMBand": 1
            }
        }
        Property { name: "frequency"; type: "int" }
        Property { name: "minimumFrequency"; type: "int"; isReadonly: true }
        Property { name: "maximumFrequency"; type: "int"; isReadonly: true }
        Property { name: "stepSize"; type: "int"; isReadonly: true }
        Property { name: "band"; type: "QIviAmFmTuner::Band" }
        Property { name: "station"; type: "QIviAmFmTunerStation"; isReadonly: true }
        Property { name: "scanRunning"; type: "bool"; isReadonly: true }
        Signal {
            name: "frequencyChanged"
            Parameter { name: "frequency"; type: "int" }
        }
        Signal {
            name: "minimumFrequencyChanged"
            Parameter { name: "minimumFrequency"; type: "int" }
        }
        Signal {
            name: "maximumFrequencyChanged"
            Parameter { name: "maximumFrequency"; type: "int" }
        }
        Signal {
            name: "stepSizeChanged"
            Parameter { name: "stepSize"; type: "int" }
        }
        Signal {
            name: "bandChanged"
            Parameter { name: "band"; type: "QIviAmFmTuner::Band" }
        }
        Signal {
            name: "stationChanged"
            Parameter { name: "station"; type: "QIviAmFmTunerStation" }
        }
        Signal {
            name: "scanRunningChanged"
            Parameter { name: "scanRunning"; type: "bool" }
        }
        Signal { name: "scanStarted" }
        Signal { name: "scanStopped" }
        Method {
            name: "setFrequency"
            Parameter { name: "frequency"; type: "int" }
        }
        Method {
            name: "setBand"
            Parameter { name: "band"; type: "QIviAmFmTuner::Band" }
        }
        Method { name: "stepUp" }
        Method { name: "stepDown" }
        Method { name: "seekUp" }
        Method { name: "seekDown" }
        Method { name: "startScan" }
        Method { name: "stopScan" }
        Method {
            name: "tune"
            Parameter { name: "station"; type: "QIviAmFmTunerStation" }
        }
    }
    Component {
        name: "QIviMediaDevice"
        prototype: "QIviServiceObject"
        exports: ["QtIvi.Media/MediaDevice 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "type"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "QIviMediaDeviceDiscoveryModel"
        prototype: "QIviAbstractFeatureListModel"
        exports: ["QtIvi.Media/MediaDeviceDiscoveryModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal {
            name: "deviceAdded"
            Parameter { name: "device"; type: "QIviMediaDevice"; isPointer: true }
        }
        Signal {
            name: "deviceRemoved"
            Parameter { name: "device"; type: "QIviMediaDevice"; isPointer: true }
        }
        Method {
            name: "get"
            type: "QIviMediaDevice*"
            Parameter { name: "i"; type: "int" }
        }
    }
    Component {
        name: "QIviMediaIndexerControl"
        prototype: "QIviAbstractFeature"
        exports: ["QtIvi.Media/MediaIndexerControl 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "State"
            values: {
                "Idle": 0,
                "Active": 1,
                "Paused": 2,
                "Error": 3
            }
        }
        Property { name: "progress"; type: "double"; isReadonly: true }
        Property { name: "state"; type: "QIviMediaIndexerControl::State"; isReadonly: true }
        Signal {
            name: "progressChanged"
            Parameter { name: "progress"; type: "double" }
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "QIviMediaIndexerControl::State" }
        }
        Method { name: "pause" }
        Method { name: "resume" }
    }
    Component {
        name: "QIviMediaPlayer"
        prototype: "QIviAbstractFeature"
        exports: ["QtIvi.Media/MediaPlayer 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "PlayMode"
            values: {
                "Normal": 0,
                "RepeatTrack": 1,
                "RepeatAll": 2,
                "Shuffle": 3
            }
        }
        Enum {
            name: "PlayState"
            values: {
                "Playing": 0,
                "Paused": 1,
                "Stopped": 2
            }
        }
        Property { name: "playQueue"; type: "QIviPlayQueue"; isReadonly: true; isPointer: true }
        Property { name: "playMode"; type: "QIviMediaPlayer::PlayMode" }
        Property { name: "playState"; type: "QIviMediaPlayer::PlayState"; isReadonly: true }
        Property { name: "currentTrack"; type: "QVariant"; isReadonly: true }
        Property { name: "position"; type: "qlonglong" }
        Property { name: "duration"; type: "qlonglong"; isReadonly: true }
        Signal {
            name: "playModeChanged"
            Parameter { name: "playMode"; type: "QIviMediaPlayer::PlayMode" }
        }
        Signal {
            name: "playStateChanged"
            Parameter { name: "playState"; type: "QIviMediaPlayer::PlayState" }
        }
        Signal {
            name: "currentTrackChanged"
            Parameter { name: "currentTrack"; type: "QVariant" }
        }
        Signal {
            name: "positionChanged"
            Parameter { name: "position"; type: "qlonglong" }
        }
        Signal {
            name: "durationChanged"
            Parameter { name: "duration"; type: "qlonglong" }
        }
        Method {
            name: "setPlayMode"
            Parameter { name: "playMode"; type: "QIviMediaPlayer::PlayMode" }
        }
        Method {
            name: "setPosition"
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method { name: "play" }
        Method { name: "pause" }
        Method { name: "stop" }
        Method {
            name: "seek"
            Parameter { name: "offset"; type: "qlonglong" }
        }
        Method { name: "next" }
        Method { name: "previous" }
    }
    Component {
        name: "QIviMediaUsbDevice"
        prototype: "QIviMediaDevice"
        exports: ["QtIvi.Media/MediaUsbDevice 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "eject" }
    }
    Component {
        name: "QIviPlayQueue"
        prototype: "QAbstractListModel"
        exports: ["QtIvi.Media/PlayQueue 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LoadingType"
            values: {
                "FetchMore": 0,
                "DataChanged": 1
            }
        }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "chunkSize"; type: "int" }
        Property { name: "fetchMoreThreshold"; type: "int" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "loadingType"; type: "QIviPlayQueue::LoadingType" }
        Signal {
            name: "chunkSizeChanged"
            Parameter { name: "chunkSize"; type: "int" }
        }
        Signal {
            name: "fetchMoreThresholdChanged"
            Parameter { name: "fetchMoreThreshold"; type: "int" }
        }
        Signal { name: "fetchMoreThresholdReached" }
        Signal {
            name: "loadingTypeChanged"
            Parameter { name: "loadingType"; type: "QIviPlayQueue::LoadingType" }
        }
        Signal {
            name: "currentIndexChanged"
            Parameter { name: "currentIndex"; type: "int" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "insert"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "variant"; type: "QVariant" }
        }
        Method {
            name: "remove"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "move"
            Parameter { name: "cur_index"; type: "int" }
            Parameter { name: "new_index"; type: "int" }
        }
    }
    Component {
        name: "QIviServiceObject"
        prototype: "QObject"
        Property { name: "id"; type: "string"; isReadonly: true }
    }
}
